// Code generated by ent, DO NOT EDIT.

package events

import (
	"calendar-backend/internal/storage/postgresql/ent/predicate"
	"time"

	"entgo.io/ent/dialect/sql"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.Events {
	return predicate.Events(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.Events {
	return predicate.Events(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.Events {
	return predicate.Events(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.Events {
	return predicate.Events(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.Events {
	return predicate.Events(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.Events {
	return predicate.Events(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.Events {
	return predicate.Events(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.Events {
	return predicate.Events(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.Events {
	return predicate.Events(sql.FieldLTE(FieldID, id))
}

// Name applies equality check predicate on the "name" field. It's identical to NameEQ.
func Name(v string) predicate.Events {
	return predicate.Events(sql.FieldEQ(FieldName, v))
}

// SexAge applies equality check predicate on the "sex_age" field. It's identical to SexAgeEQ.
func SexAge(v string) predicate.Events {
	return predicate.Events(sql.FieldEQ(FieldSexAge, v))
}

// Discipline applies equality check predicate on the "discipline" field. It's identical to DisciplineEQ.
func Discipline(v string) predicate.Events {
	return predicate.Events(sql.FieldEQ(FieldDiscipline, v))
}

// TimeStart applies equality check predicate on the "time_start" field. It's identical to TimeStartEQ.
func TimeStart(v time.Time) predicate.Events {
	return predicate.Events(sql.FieldEQ(FieldTimeStart, v))
}

// TimeEnd applies equality check predicate on the "time_end" field. It's identical to TimeEndEQ.
func TimeEnd(v time.Time) predicate.Events {
	return predicate.Events(sql.FieldEQ(FieldTimeEnd, v))
}

// Venue applies equality check predicate on the "venue" field. It's identical to VenueEQ.
func Venue(v string) predicate.Events {
	return predicate.Events(sql.FieldEQ(FieldVenue, v))
}

// Participants applies equality check predicate on the "participants" field. It's identical to ParticipantsEQ.
func Participants(v int) predicate.Events {
	return predicate.Events(sql.FieldEQ(FieldParticipants, v))
}

// SportID applies equality check predicate on the "sport_id" field. It's identical to SportIDEQ.
func SportID(v string) predicate.Events {
	return predicate.Events(sql.FieldEQ(FieldSportID, v))
}

// NameEQ applies the EQ predicate on the "name" field.
func NameEQ(v string) predicate.Events {
	return predicate.Events(sql.FieldEQ(FieldName, v))
}

// NameNEQ applies the NEQ predicate on the "name" field.
func NameNEQ(v string) predicate.Events {
	return predicate.Events(sql.FieldNEQ(FieldName, v))
}

// NameIn applies the In predicate on the "name" field.
func NameIn(vs ...string) predicate.Events {
	return predicate.Events(sql.FieldIn(FieldName, vs...))
}

// NameNotIn applies the NotIn predicate on the "name" field.
func NameNotIn(vs ...string) predicate.Events {
	return predicate.Events(sql.FieldNotIn(FieldName, vs...))
}

// NameGT applies the GT predicate on the "name" field.
func NameGT(v string) predicate.Events {
	return predicate.Events(sql.FieldGT(FieldName, v))
}

// NameGTE applies the GTE predicate on the "name" field.
func NameGTE(v string) predicate.Events {
	return predicate.Events(sql.FieldGTE(FieldName, v))
}

// NameLT applies the LT predicate on the "name" field.
func NameLT(v string) predicate.Events {
	return predicate.Events(sql.FieldLT(FieldName, v))
}

// NameLTE applies the LTE predicate on the "name" field.
func NameLTE(v string) predicate.Events {
	return predicate.Events(sql.FieldLTE(FieldName, v))
}

// NameContains applies the Contains predicate on the "name" field.
func NameContains(v string) predicate.Events {
	return predicate.Events(sql.FieldContains(FieldName, v))
}

// NameHasPrefix applies the HasPrefix predicate on the "name" field.
func NameHasPrefix(v string) predicate.Events {
	return predicate.Events(sql.FieldHasPrefix(FieldName, v))
}

// NameHasSuffix applies the HasSuffix predicate on the "name" field.
func NameHasSuffix(v string) predicate.Events {
	return predicate.Events(sql.FieldHasSuffix(FieldName, v))
}

// NameEqualFold applies the EqualFold predicate on the "name" field.
func NameEqualFold(v string) predicate.Events {
	return predicate.Events(sql.FieldEqualFold(FieldName, v))
}

// NameContainsFold applies the ContainsFold predicate on the "name" field.
func NameContainsFold(v string) predicate.Events {
	return predicate.Events(sql.FieldContainsFold(FieldName, v))
}

// SexAgeEQ applies the EQ predicate on the "sex_age" field.
func SexAgeEQ(v string) predicate.Events {
	return predicate.Events(sql.FieldEQ(FieldSexAge, v))
}

// SexAgeNEQ applies the NEQ predicate on the "sex_age" field.
func SexAgeNEQ(v string) predicate.Events {
	return predicate.Events(sql.FieldNEQ(FieldSexAge, v))
}

// SexAgeIn applies the In predicate on the "sex_age" field.
func SexAgeIn(vs ...string) predicate.Events {
	return predicate.Events(sql.FieldIn(FieldSexAge, vs...))
}

// SexAgeNotIn applies the NotIn predicate on the "sex_age" field.
func SexAgeNotIn(vs ...string) predicate.Events {
	return predicate.Events(sql.FieldNotIn(FieldSexAge, vs...))
}

// SexAgeGT applies the GT predicate on the "sex_age" field.
func SexAgeGT(v string) predicate.Events {
	return predicate.Events(sql.FieldGT(FieldSexAge, v))
}

// SexAgeGTE applies the GTE predicate on the "sex_age" field.
func SexAgeGTE(v string) predicate.Events {
	return predicate.Events(sql.FieldGTE(FieldSexAge, v))
}

// SexAgeLT applies the LT predicate on the "sex_age" field.
func SexAgeLT(v string) predicate.Events {
	return predicate.Events(sql.FieldLT(FieldSexAge, v))
}

// SexAgeLTE applies the LTE predicate on the "sex_age" field.
func SexAgeLTE(v string) predicate.Events {
	return predicate.Events(sql.FieldLTE(FieldSexAge, v))
}

// SexAgeContains applies the Contains predicate on the "sex_age" field.
func SexAgeContains(v string) predicate.Events {
	return predicate.Events(sql.FieldContains(FieldSexAge, v))
}

// SexAgeHasPrefix applies the HasPrefix predicate on the "sex_age" field.
func SexAgeHasPrefix(v string) predicate.Events {
	return predicate.Events(sql.FieldHasPrefix(FieldSexAge, v))
}

// SexAgeHasSuffix applies the HasSuffix predicate on the "sex_age" field.
func SexAgeHasSuffix(v string) predicate.Events {
	return predicate.Events(sql.FieldHasSuffix(FieldSexAge, v))
}

// SexAgeEqualFold applies the EqualFold predicate on the "sex_age" field.
func SexAgeEqualFold(v string) predicate.Events {
	return predicate.Events(sql.FieldEqualFold(FieldSexAge, v))
}

// SexAgeContainsFold applies the ContainsFold predicate on the "sex_age" field.
func SexAgeContainsFold(v string) predicate.Events {
	return predicate.Events(sql.FieldContainsFold(FieldSexAge, v))
}

// DisciplineEQ applies the EQ predicate on the "discipline" field.
func DisciplineEQ(v string) predicate.Events {
	return predicate.Events(sql.FieldEQ(FieldDiscipline, v))
}

// DisciplineNEQ applies the NEQ predicate on the "discipline" field.
func DisciplineNEQ(v string) predicate.Events {
	return predicate.Events(sql.FieldNEQ(FieldDiscipline, v))
}

// DisciplineIn applies the In predicate on the "discipline" field.
func DisciplineIn(vs ...string) predicate.Events {
	return predicate.Events(sql.FieldIn(FieldDiscipline, vs...))
}

// DisciplineNotIn applies the NotIn predicate on the "discipline" field.
func DisciplineNotIn(vs ...string) predicate.Events {
	return predicate.Events(sql.FieldNotIn(FieldDiscipline, vs...))
}

// DisciplineGT applies the GT predicate on the "discipline" field.
func DisciplineGT(v string) predicate.Events {
	return predicate.Events(sql.FieldGT(FieldDiscipline, v))
}

// DisciplineGTE applies the GTE predicate on the "discipline" field.
func DisciplineGTE(v string) predicate.Events {
	return predicate.Events(sql.FieldGTE(FieldDiscipline, v))
}

// DisciplineLT applies the LT predicate on the "discipline" field.
func DisciplineLT(v string) predicate.Events {
	return predicate.Events(sql.FieldLT(FieldDiscipline, v))
}

// DisciplineLTE applies the LTE predicate on the "discipline" field.
func DisciplineLTE(v string) predicate.Events {
	return predicate.Events(sql.FieldLTE(FieldDiscipline, v))
}

// DisciplineContains applies the Contains predicate on the "discipline" field.
func DisciplineContains(v string) predicate.Events {
	return predicate.Events(sql.FieldContains(FieldDiscipline, v))
}

// DisciplineHasPrefix applies the HasPrefix predicate on the "discipline" field.
func DisciplineHasPrefix(v string) predicate.Events {
	return predicate.Events(sql.FieldHasPrefix(FieldDiscipline, v))
}

// DisciplineHasSuffix applies the HasSuffix predicate on the "discipline" field.
func DisciplineHasSuffix(v string) predicate.Events {
	return predicate.Events(sql.FieldHasSuffix(FieldDiscipline, v))
}

// DisciplineEqualFold applies the EqualFold predicate on the "discipline" field.
func DisciplineEqualFold(v string) predicate.Events {
	return predicate.Events(sql.FieldEqualFold(FieldDiscipline, v))
}

// DisciplineContainsFold applies the ContainsFold predicate on the "discipline" field.
func DisciplineContainsFold(v string) predicate.Events {
	return predicate.Events(sql.FieldContainsFold(FieldDiscipline, v))
}

// TimeStartEQ applies the EQ predicate on the "time_start" field.
func TimeStartEQ(v time.Time) predicate.Events {
	return predicate.Events(sql.FieldEQ(FieldTimeStart, v))
}

// TimeStartNEQ applies the NEQ predicate on the "time_start" field.
func TimeStartNEQ(v time.Time) predicate.Events {
	return predicate.Events(sql.FieldNEQ(FieldTimeStart, v))
}

// TimeStartIn applies the In predicate on the "time_start" field.
func TimeStartIn(vs ...time.Time) predicate.Events {
	return predicate.Events(sql.FieldIn(FieldTimeStart, vs...))
}

// TimeStartNotIn applies the NotIn predicate on the "time_start" field.
func TimeStartNotIn(vs ...time.Time) predicate.Events {
	return predicate.Events(sql.FieldNotIn(FieldTimeStart, vs...))
}

// TimeStartGT applies the GT predicate on the "time_start" field.
func TimeStartGT(v time.Time) predicate.Events {
	return predicate.Events(sql.FieldGT(FieldTimeStart, v))
}

// TimeStartGTE applies the GTE predicate on the "time_start" field.
func TimeStartGTE(v time.Time) predicate.Events {
	return predicate.Events(sql.FieldGTE(FieldTimeStart, v))
}

// TimeStartLT applies the LT predicate on the "time_start" field.
func TimeStartLT(v time.Time) predicate.Events {
	return predicate.Events(sql.FieldLT(FieldTimeStart, v))
}

// TimeStartLTE applies the LTE predicate on the "time_start" field.
func TimeStartLTE(v time.Time) predicate.Events {
	return predicate.Events(sql.FieldLTE(FieldTimeStart, v))
}

// TimeEndEQ applies the EQ predicate on the "time_end" field.
func TimeEndEQ(v time.Time) predicate.Events {
	return predicate.Events(sql.FieldEQ(FieldTimeEnd, v))
}

// TimeEndNEQ applies the NEQ predicate on the "time_end" field.
func TimeEndNEQ(v time.Time) predicate.Events {
	return predicate.Events(sql.FieldNEQ(FieldTimeEnd, v))
}

// TimeEndIn applies the In predicate on the "time_end" field.
func TimeEndIn(vs ...time.Time) predicate.Events {
	return predicate.Events(sql.FieldIn(FieldTimeEnd, vs...))
}

// TimeEndNotIn applies the NotIn predicate on the "time_end" field.
func TimeEndNotIn(vs ...time.Time) predicate.Events {
	return predicate.Events(sql.FieldNotIn(FieldTimeEnd, vs...))
}

// TimeEndGT applies the GT predicate on the "time_end" field.
func TimeEndGT(v time.Time) predicate.Events {
	return predicate.Events(sql.FieldGT(FieldTimeEnd, v))
}

// TimeEndGTE applies the GTE predicate on the "time_end" field.
func TimeEndGTE(v time.Time) predicate.Events {
	return predicate.Events(sql.FieldGTE(FieldTimeEnd, v))
}

// TimeEndLT applies the LT predicate on the "time_end" field.
func TimeEndLT(v time.Time) predicate.Events {
	return predicate.Events(sql.FieldLT(FieldTimeEnd, v))
}

// TimeEndLTE applies the LTE predicate on the "time_end" field.
func TimeEndLTE(v time.Time) predicate.Events {
	return predicate.Events(sql.FieldLTE(FieldTimeEnd, v))
}

// VenueEQ applies the EQ predicate on the "venue" field.
func VenueEQ(v string) predicate.Events {
	return predicate.Events(sql.FieldEQ(FieldVenue, v))
}

// VenueNEQ applies the NEQ predicate on the "venue" field.
func VenueNEQ(v string) predicate.Events {
	return predicate.Events(sql.FieldNEQ(FieldVenue, v))
}

// VenueIn applies the In predicate on the "venue" field.
func VenueIn(vs ...string) predicate.Events {
	return predicate.Events(sql.FieldIn(FieldVenue, vs...))
}

// VenueNotIn applies the NotIn predicate on the "venue" field.
func VenueNotIn(vs ...string) predicate.Events {
	return predicate.Events(sql.FieldNotIn(FieldVenue, vs...))
}

// VenueGT applies the GT predicate on the "venue" field.
func VenueGT(v string) predicate.Events {
	return predicate.Events(sql.FieldGT(FieldVenue, v))
}

// VenueGTE applies the GTE predicate on the "venue" field.
func VenueGTE(v string) predicate.Events {
	return predicate.Events(sql.FieldGTE(FieldVenue, v))
}

// VenueLT applies the LT predicate on the "venue" field.
func VenueLT(v string) predicate.Events {
	return predicate.Events(sql.FieldLT(FieldVenue, v))
}

// VenueLTE applies the LTE predicate on the "venue" field.
func VenueLTE(v string) predicate.Events {
	return predicate.Events(sql.FieldLTE(FieldVenue, v))
}

// VenueContains applies the Contains predicate on the "venue" field.
func VenueContains(v string) predicate.Events {
	return predicate.Events(sql.FieldContains(FieldVenue, v))
}

// VenueHasPrefix applies the HasPrefix predicate on the "venue" field.
func VenueHasPrefix(v string) predicate.Events {
	return predicate.Events(sql.FieldHasPrefix(FieldVenue, v))
}

// VenueHasSuffix applies the HasSuffix predicate on the "venue" field.
func VenueHasSuffix(v string) predicate.Events {
	return predicate.Events(sql.FieldHasSuffix(FieldVenue, v))
}

// VenueEqualFold applies the EqualFold predicate on the "venue" field.
func VenueEqualFold(v string) predicate.Events {
	return predicate.Events(sql.FieldEqualFold(FieldVenue, v))
}

// VenueContainsFold applies the ContainsFold predicate on the "venue" field.
func VenueContainsFold(v string) predicate.Events {
	return predicate.Events(sql.FieldContainsFold(FieldVenue, v))
}

// ParticipantsEQ applies the EQ predicate on the "participants" field.
func ParticipantsEQ(v int) predicate.Events {
	return predicate.Events(sql.FieldEQ(FieldParticipants, v))
}

// ParticipantsNEQ applies the NEQ predicate on the "participants" field.
func ParticipantsNEQ(v int) predicate.Events {
	return predicate.Events(sql.FieldNEQ(FieldParticipants, v))
}

// ParticipantsIn applies the In predicate on the "participants" field.
func ParticipantsIn(vs ...int) predicate.Events {
	return predicate.Events(sql.FieldIn(FieldParticipants, vs...))
}

// ParticipantsNotIn applies the NotIn predicate on the "participants" field.
func ParticipantsNotIn(vs ...int) predicate.Events {
	return predicate.Events(sql.FieldNotIn(FieldParticipants, vs...))
}

// ParticipantsGT applies the GT predicate on the "participants" field.
func ParticipantsGT(v int) predicate.Events {
	return predicate.Events(sql.FieldGT(FieldParticipants, v))
}

// ParticipantsGTE applies the GTE predicate on the "participants" field.
func ParticipantsGTE(v int) predicate.Events {
	return predicate.Events(sql.FieldGTE(FieldParticipants, v))
}

// ParticipantsLT applies the LT predicate on the "participants" field.
func ParticipantsLT(v int) predicate.Events {
	return predicate.Events(sql.FieldLT(FieldParticipants, v))
}

// ParticipantsLTE applies the LTE predicate on the "participants" field.
func ParticipantsLTE(v int) predicate.Events {
	return predicate.Events(sql.FieldLTE(FieldParticipants, v))
}

// SportIDEQ applies the EQ predicate on the "sport_id" field.
func SportIDEQ(v string) predicate.Events {
	return predicate.Events(sql.FieldEQ(FieldSportID, v))
}

// SportIDNEQ applies the NEQ predicate on the "sport_id" field.
func SportIDNEQ(v string) predicate.Events {
	return predicate.Events(sql.FieldNEQ(FieldSportID, v))
}

// SportIDIn applies the In predicate on the "sport_id" field.
func SportIDIn(vs ...string) predicate.Events {
	return predicate.Events(sql.FieldIn(FieldSportID, vs...))
}

// SportIDNotIn applies the NotIn predicate on the "sport_id" field.
func SportIDNotIn(vs ...string) predicate.Events {
	return predicate.Events(sql.FieldNotIn(FieldSportID, vs...))
}

// SportIDGT applies the GT predicate on the "sport_id" field.
func SportIDGT(v string) predicate.Events {
	return predicate.Events(sql.FieldGT(FieldSportID, v))
}

// SportIDGTE applies the GTE predicate on the "sport_id" field.
func SportIDGTE(v string) predicate.Events {
	return predicate.Events(sql.FieldGTE(FieldSportID, v))
}

// SportIDLT applies the LT predicate on the "sport_id" field.
func SportIDLT(v string) predicate.Events {
	return predicate.Events(sql.FieldLT(FieldSportID, v))
}

// SportIDLTE applies the LTE predicate on the "sport_id" field.
func SportIDLTE(v string) predicate.Events {
	return predicate.Events(sql.FieldLTE(FieldSportID, v))
}

// SportIDContains applies the Contains predicate on the "sport_id" field.
func SportIDContains(v string) predicate.Events {
	return predicate.Events(sql.FieldContains(FieldSportID, v))
}

// SportIDHasPrefix applies the HasPrefix predicate on the "sport_id" field.
func SportIDHasPrefix(v string) predicate.Events {
	return predicate.Events(sql.FieldHasPrefix(FieldSportID, v))
}

// SportIDHasSuffix applies the HasSuffix predicate on the "sport_id" field.
func SportIDHasSuffix(v string) predicate.Events {
	return predicate.Events(sql.FieldHasSuffix(FieldSportID, v))
}

// SportIDEqualFold applies the EqualFold predicate on the "sport_id" field.
func SportIDEqualFold(v string) predicate.Events {
	return predicate.Events(sql.FieldEqualFold(FieldSportID, v))
}

// SportIDContainsFold applies the ContainsFold predicate on the "sport_id" field.
func SportIDContainsFold(v string) predicate.Events {
	return predicate.Events(sql.FieldContainsFold(FieldSportID, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.Events) predicate.Events {
	return predicate.Events(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.Events) predicate.Events {
	return predicate.Events(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.Events) predicate.Events {
	return predicate.Events(sql.NotPredicates(p))
}
